#VRML_SIM R2023b utf8
# template language: javascript

EXTERNPROTO "https://raw.githubusercontent.com/cyberbotics/webots/R2023b/projects/appearances/protos/BrushedAluminium.proto"
EXTERNPROTO "https://raw.githubusercontent.com/cyberbotics/webots/R2023b/projects/appearances/protos/Plastic.proto"
EXTERNPROTO "https://raw.githubusercontent.com/cyberbotics/webots/R2023b/projects/appearances/protos/CorrodedMetal.proto"
EXTERNPROTO "https://raw.githubusercontent.com/cyberbotics/webots/R2023b/projects/devices/robotis/protos/RobotisLds01.proto"
EXTERNPROTO "OmniWheel.proto"
EXTERNPROTO "Wheel.proto"
EXTERNPROTO "ArucoTag.proto"

PROTO GenericRobot [
  field SFString   name               "robot_memristor"
  field SFVec3f    translation        0.5 0 0
  field SFRotation rotation           0 1 0 0
  field SFString   controller         "<extern>"
  field SFBool     supervisor         FALSE
  field SFInt32    arucoNumber        1
  field MFNode     baseSlot           []
  field SFString {"blue", "green"} color "green"
  hiddenField SFFloat mass_robot         15
  hiddenField SFFloat robot_x_size 0.2
  hiddenField SFFloat robot_y_size 0.3
  hiddenField SFFloat robot_z_size 0.337
  hiddenField SFFloat cap_cylinder_height 0.15
  hiddenField SFColor blueVector 0 0.352941176 0.549019608
  hiddenField SFColor greenVector 0 0.439215686 0.235294118
]
{
  %<
    var color_vec;
    var inverse_vec;
    if (fields.color.value == "green") {
      color_vec = fields.greenVector.value;
      inverse_vec = fields.blueVector.value;
    }
    else {
      color_vec = fields.blueVector.value;
      inverse_vec = fields.greenVector.value;
    }
    let url = '"../worlds/assets/aruco/4x4_1000-' + fields.arucoNumber.value.toString() + '.png"';
  >%
Robot {
  	translation IS translation
  	rotation IS rotation
  	name IS name
  	supervisor IS supervisor
  	controller IS controller
  	children [
		DEF TURRET_SLOT Transform {
			children IS baseSlot
		}
		RobotisLds01 {
			translation 0 0 0.349
			rotation 0 0 1 3.14
		}
		SliderJoint {
			jointParameters JointParameters {
				minStop -0.06
			}
			endPoint Solid {
				name "left_encoder_holder"
				translation 0 0.1435 0.0375 
				children [
					Wheel {
						name "left"
						hasEncoder TRUE
						hasMotor FALSE
					}
				]
				boundingObject Box {
					size 0.01 0.01 0.01 
				}
				physics Physics {}
			}
		}
		Transform {
			translation 0 0.0715 0.036
			children [
				Wheel {
					name "left"
				}
			]
		}
		SliderJoint {
			jointParameters JointParameters {
				minStop -0.06
			}
			endPoint Solid {
				name "right_encoder_holder"
				translation 0 -0.1435 0.0375
				children [
					Wheel {
						name "right"
						hasEncoder TRUE
						hasMotor FALSE
					}
				]
				boundingObject Box {
					size 0.01 0.01 0.01 
				}
				physics Physics {}
			}
		}
		Transform {
			translation 0 -0.0715 0.036
			children [
				Wheel {
					name "right"
				}
			]
		}
		OmniWheel {}
		ArucoTag {
			arucoNumber IS arucoNumber
		}
		DEF BODY_SHAPE Transform {
			translation 0 0 %<= fields.robot_z_size.value / 2 >%
			children [
				Shape {
					geometry Box {
						size %<= fields.robot_x_size.value >% %<= fields.robot_y_size.value >% %<= fields.robot_z_size.value >%
					}
					appearance PBRAppearance {
            baseColor %<= inverse_vec.r >% %<= inverse_vec.g >% %<= inverse_vec.b >%
            roughness 1
						metalness 0
					}
				}
			]
		}
		Transform {
			translation 0 0 %<= fields.robot_z_size.value + fields.cap_cylinder_height.value/2 + 0.02 >%
			children [
				DEF cap_cylinder Shape {
					appearance PBRAppearance {
            baseColor %<= color_vec.r >% %<= color_vec.g >% %<= color_vec.b >%
            roughness 1
						metalness 0
					}
					geometry Cylinder {
						height IS cap_cylinder_height
              			radius 0.03
					}
				}
			]
		}
	]
  boundingObject USE BODY_SHAPE
  physics Physics {
    density -1
    mass IS mass_robot
  }
}
}